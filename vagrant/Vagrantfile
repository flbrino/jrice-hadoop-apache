# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. 
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "ubuntu/trusty64"

  config.vm.provider :virtualbox do |vb|
    vb.name = "JRice Hadoop Sandbox - Apache"
    vb.customize ["modifyvm", :id, "--memory", "2000"]
  end

  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Define the default values
  #
  # These values will be used if the user has not provided an override environment variable.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  #define default values for environment variables
  
  
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Set Variables to be used for local machines and hadoop VMs.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Export the environment variables to the hadoop sandbox VM.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  config.vm.provision :shell, inline: "rm -f /etc/profile.d/hadoop-env-vars.sh", run: "always"
  config.vm.provision :shell, inline: "> /etc/profile.d/hadoop-env-vars.sh", run: "always"
  config.vm.provision :shell, inline: "echo \"export JAVA_HOME=/usr/lib/jvm/java-8-oracle\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"
  config.vm.provision :shell, inline: "echo \"export HADOOP_HOME=/opt/hadoop-2.8.1\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"

  config.vm.provision :shell, inline: "echo \"export HADOOP_EXAMPLES=$HADOOP_HOME/share/hadoop/mapreduce\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"

  config.vm.provision :shell, inline: "echo \"export PIG_HOME=/opt/pig-0.17.0\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"
  config.vm.provision :shell, inline: "echo \"export PIG_CLASSPATH=$HADOOP_HOME/etc/hadoop/\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"
  
  config.vm.provision :shell, inline: "echo \"export HIVE_HOME=/opt/apache-hive-2.3.0-bin\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"
  config.vm.provision :shell, inline: "echo \"export HIVE_CLASSPATH=$HADOOP_HOME/etc/hadoop/\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"
  
  config.vm.provision :shell, inline: "echo \"export PATH=$PATH:$HADOOP_HOME/bin:$PIG_HOME/bin:$HIVE_HOME/bin\" >> /etc/profile.d/hadoop-env-vars.sh", run: "always"

  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Set up synced folders between local machine and dev-env VM.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  config.vm.synced_folder "scripts", "/home/vagrant/scripts", create: true
  config.vm.synced_folder "config-files", "/home/vagrant/config-files", create: true
  
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Set up provisioners to setup Java 8 and hadoop sandbox VM.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  config.vm.provision :shell, inline: 'wget --no-check-certificate https://github.com/aglover/ubuntu-equip/raw/master/equip_java8.sh && bash equip_java8.sh'
  config.vm.provision "shell", path: "provision/install-hadoop.sh"
  config.vm.provision "shell", path: "provision/format-hdfs.sh"
  config.vm.provision "shell", path: "provision/create-hdfs-directories-for-mapreduce-history.sh"
  config.vm.provision "shell", path: "provision/create-hdfs-directories-for-hive.sh"
  config.vm.provision "shell", path: "provision/install-hive.sh"
  config.vm.provision "shell", path: "provision/install-pig.sh"
  config.vm.provision "shell", path: "provision/install-spark.sh"
  config.vm.provision "shell", path: "scripts/start-hadoop-hdfs.sh"
  config.vm.provision "shell", path: "scripts/start-hadoop-yarn.sh"
  config.vm.provision "shell", path: "scripts/start-hadoop-hdfs.sh"

  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Copy the configutration files to configure hadoop
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  config.vm.provision "file", source: "config-files/core-site.xml", destination: "/opt/hadoop-2.8.1/etc/hadoop/core-site.xml", run: "always"
  config.vm.provision "file", source: "config-files/hadoop-env.sh", destination: "/opt/hadoop-2.8.1/etc/hadoop/hadoop-env.sh", run: "always"
  config.vm.provision "file", source: "config-files/hdfs-site.xml", destination: "/opt/hadoop-2.8.1/etc/hadoop/hdfs-site.xml", run: "always"
  config.vm.provision "file", source: "config-files/mapred-env.sh", destination: "/opt/hadoop-2.8.1/etc/hadoop/mapred-env.sh", run: "always"
  config.vm.provision "file", source: "config-files/mapred-site.xml", destination: "/opt/hadoop-2.8.1/etc/hadoop/mapred-site.xml", run: "always"
  config.vm.provision "file", source: "config-files/yarn-env.sh", destination: "/opt/hadoop-2.8.1/etc/hadoop/yarn-env.sh", run: "always"
  config.vm.provision "file", source: "config-files/yarn-site.xml", destination: "/opt/hadoop-2.8.1/etc/hadoop/yarn-site.xml", run: "always"
  
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Expose ports of Hadoop web apps and services.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  config.vm.network "forwarded_port", guest: 50070, host: 50070 
  config.vm.network "forwarded_port", guest: 8088, host: 8088 
  
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  # Expose 10 general purpose ports between from dev vm to local.
  #
  # These ports are exposed so you can run 10 arbitrary apps in dev vm and 
  # expose the ports to local machine without having to touch any configuration.
  # -----------------------------------------------------------------------------------------------------------------------------------------------
  config.vm.network "forwarded_port", guest: 7070, host: 7070
  config.vm.network "forwarded_port", guest: 7170, host: 7170
  config.vm.network "forwarded_port", guest: 7270, host: 7270
  config.vm.network "forwarded_port", guest: 7370, host: 7370
  config.vm.network "forwarded_port", guest: 7470, host: 7470
  config.vm.network "forwarded_port", guest: 7570, host: 7570
  config.vm.network "forwarded_port", guest: 7670, host: 7670
  config.vm.network "forwarded_port", guest: 7770, host: 7770
  config.vm.network "forwarded_port", guest: 7870, host: 7870
  config.vm.network "forwarded_port", guest: 7970, host: 7970

end
